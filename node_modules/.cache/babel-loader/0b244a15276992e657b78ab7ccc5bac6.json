{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/easytunes/src/components/Playlist/Playlist.js\";\nimport React, { Component } from 'react';\nimport { AiFillHome, AiFillHeart, AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\nimport Songlist from './Songlist/Songlist';\nimport Comments from './Comments/Comments';\nimport PlaylistSetting from './PlaylistSetting/PlaylistSetting';\nimport PlaylistNavbar from '../PlaylistNavbar/PlaylistNavbar.js';\nimport HeaderNavbar from '../HeaderNavbar/HeaderNavbar';\nimport './Playlist.css';\nimport mockData from '../../mock_data.json'; // A playlist page \n\nclass Playlist extends Component {\n  constructor(...args) {\n    super(...args);\n    this.users = mockData.users;\n    this.playlists = mockData.playlists;\n    this.state = {\n      songsVisible: true,\n      commentsVisible: false,\n      settingsVisible: false,\n      play: false,\n      public: true,\n      owner: true\n    };\n\n    this.getLikes = () => {\n      return 1;\n    };\n\n    this.getPlaylistName = () => {\n      const id = this.props.match.params.playlistid;\n      return id;\n    };\n\n    this.getUserName = () => {\n      const user = this.props.match.params.userid;\n      return user;\n    };\n\n    this.getPlaylist = () => {\n      for (let i = 0; i < this.playlists.length; i++) {\n        if (this.playlists[i].name === this.getPlaylistName() && this.playlists[i].username === this.getUserName()) {\n          return this.playlists[i];\n        }\n      }\n    };\n\n    this.handleHome = () => {\n      const {\n        history\n      } = this.props;\n      console.log(history);\n      history.push('/home');\n    };\n\n    this.setSongsVisible = () => {\n      this.setState({\n        songsVisible: true,\n        commentsVisible: false,\n        settingsVisible: false\n      });\n      document.getElementById('songs-btn').style.borderBottom = \"3px solid #faed26\";\n      document.getElementById('comments-btn').style.border = \"none\";\n      document.getElementById('settings-btn').style.border = \"none\";\n      document.getElementById('songs-btn').style.fontWeight = \"bold\";\n      document.getElementById('comments-btn').style.fontWeight = \"normal\";\n      document.getElementById('settings-btn').style.fontWeight = \"normal\";\n    };\n\n    this.setCommentsVisible = () => {\n      this.setState({\n        songsVisible: false,\n        commentsVisible: true,\n        settingsVisible: false\n      });\n      document.getElementById('songs-btn').style.border = \"none\";\n      document.getElementById('comments-btn').style.borderBottom = \"3px solid #faed26\";\n      document.getElementById('settings-btn').style.border = \"none\";\n      document.getElementById('songs-btn').style.fontWeight = \"normal\";\n      document.getElementById('comments-btn').style.fontWeight = \"bold\";\n      document.getElementById('settings-btn').style.fontWeight = \"normal\";\n    };\n\n    this.setSettingVisible = () => {\n      this.setState({\n        songsVisible: false,\n        commentsVisible: false,\n        settingsVisible: true\n      });\n      document.getElementById('songs-btn').style.border = \"none\";\n      document.getElementById('comments-btn').style.border = \"none\";\n      document.getElementById('settings-btn').style.borderBottom = \"3px solid #faed26\";\n      document.getElementById('songs-btn').style.fontWeight = \"normal\";\n      document.getElementById('comments-btn').style.fontWeight = \"normal\";\n      document.getElementById('settings-btn').style.fontWeight = \"bold\";\n    };\n  }\n\n  render() {\n    function User({\n      username,\n      history\n    }) {\n      function toUserProfile() {\n        history.history.push('/' + username);\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"user-btn\",\n        onClick: toUserProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \" \", username, \" \");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid playlist-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(HeaderNavbar, {\n      props: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid playlist-data-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"information-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center align-self-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"likes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AiFillHeart, {\n      size: 34,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }), this.getLikes())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center align-self-left playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, this.getPlaylistName(), \" \", this.state.public ? /*#__PURE__*/React.createElement(AiFillEye, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 79\n      }\n    }) : /*#__PURE__*/React.createElement(AiFillEyeInvisible, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \" Playlist By: \", /*#__PURE__*/React.createElement(User, {\n      username: this.getUserName(),\n      history: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 47\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col public-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    })), this.state.owner ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navigation-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"songs-btn\",\n      className: \"songs-btn\",\n      onClick: this.setSongsVisible,\n      style: {\n        borderBottom: \"3px solid #faed26\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, \" Songs \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"comments-btn\",\n      className: \"comments-btn\",\n      onClick: this.setCommentsVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \" Comments \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"settings-btn\",\n      className: \"settings-btn\",\n      onClick: this.setSettingVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, \" Settings \"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row navigation-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"songs-btn\",\n      className: \"songs-btn\",\n      onClick: this.setSongsVisible,\n      style: {\n        borderBottom: \"3px solid #faed26\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \" Songs \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center playlist-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"comments-btn\",\n      className: \"comments-btn\",\n      onClick: this.setCommentsVisible,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \" Comments \"))), this.state.songsVisible ? /*#__PURE__*/React.createElement(Songlist, {\n      playlist: this.getPlaylist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 48\n      }\n    }) : null, this.state.commentsVisible ? /*#__PURE__*/React.createElement(Comments, {\n      playlist: this.getPlaylist(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 51\n      }\n    }) : null, this.state.settingsVisible ? /*#__PURE__*/React.createElement(PlaylistSetting, {\n      playlist_name: this.getPlaylistName(),\n      public: this.state.public,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 51\n      }\n    }) : null), /*#__PURE__*/React.createElement(PlaylistNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Playlist;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/easytunes/src/components/Playlist/Playlist.js"],"names":["React","Component","AiFillHome","AiFillHeart","AiFillEyeInvisible","AiFillEye","MdAccountCircle","Songlist","Comments","PlaylistSetting","PlaylistNavbar","HeaderNavbar","mockData","Playlist","users","playlists","state","songsVisible","commentsVisible","settingsVisible","play","public","owner","getLikes","getPlaylistName","id","props","match","params","playlistid","getUserName","user","userid","getPlaylist","i","length","name","username","handleHome","history","console","log","push","setSongsVisible","setState","document","getElementById","style","borderBottom","border","fontWeight","setCommentsVisible","setSettingVisible","render","User","toUserProfile"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport {AiFillHome, AiFillHeart, AiFillEyeInvisible, AiFillEye} from 'react-icons/ai'\nimport {MdAccountCircle} from 'react-icons/md'\nimport Songlist from './Songlist/Songlist'\nimport Comments from './Comments/Comments'\nimport PlaylistSetting from './PlaylistSetting/PlaylistSetting'\nimport PlaylistNavbar from '../PlaylistNavbar/PlaylistNavbar.js'\nimport HeaderNavbar from '../HeaderNavbar/HeaderNavbar'\nimport './Playlist.css'\n\nimport mockData from '../../mock_data.json'\n// A playlist page \nclass Playlist extends Component {\n    users = mockData.users \n    playlists = mockData.playlists \n\n    state = { \n        songsVisible : true,\n        commentsVisible : false,\n        settingsVisible : false,\n        play: false,\n        public: true,\n        owner: true\n    };\n\n    // Get the likes a playlist has \n    getLikes = () => {\n        return 1\n    }\n\n    // Get the playlist name from url \n    getPlaylistName = () => {\n        const id = this.props.match.params.playlistid;\n        return id\n    }\n\n    // Get the username \n    getUserName = () => {\n        const user = this.props.match.params.userid;\n        return user\n    }\n\n    getPlaylist = () => {\n        for (let i = 0; i < this.playlists.length; i++){\n            if (this.playlists[i].name === this.getPlaylistName() && this.playlists[i].username === this.getUserName()){\n                return this.playlists[i]\n\n            }\n                \n        }\n    }\n\n    // Redirect to Home when home button is pressed \n    handleHome = () => {\n        const {history } = this.props;\n        console.log(history);\n        history.push('/home')\n    }\n    // Button click on \"Songs\"\n    setSongsVisible = () =>{\n        this.setState(\n            {   songsVisible : true,\n                commentsVisible : false,\n                settingsVisible : false}\n        )\n        document.getElementById('songs-btn').style.borderBottom = \"3px solid #faed26\"\n        document.getElementById('comments-btn').style.border = \"none\"\n        document.getElementById('settings-btn').style.border = \"none\"\n        document.getElementById('songs-btn').style.fontWeight = \"bold\"\n        document.getElementById('comments-btn').style.fontWeight = \"normal\"\n        document.getElementById('settings-btn').style.fontWeight = \"normal\"\n    }\n\n    // Button click on \"Comments\"\n    setCommentsVisible = () => {\n        this.setState(\n            {\n                songsVisible : false,\n                commentsVisible : true,\n                settingsVisible : false\n            }\n        )\n        document.getElementById('songs-btn').style.border = \"none\"\n        document.getElementById('comments-btn').style.borderBottom  = \"3px solid #faed26\"\n        document.getElementById('settings-btn').style.border = \"none\"\n        document.getElementById('songs-btn').style.fontWeight = \"normal\"\n        document.getElementById('comments-btn').style.fontWeight = \"bold\"\n        document.getElementById('settings-btn').style.fontWeight = \"normal\"\n    }\n\n    // Button click on Settings\n    setSettingVisible = () => {\n        this.setState(\n            {\n                songsVisible : false,\n                commentsVisible : false,\n                settingsVisible : true\n            }\n        )\n        document.getElementById('songs-btn').style.border = \"none\"\n        document.getElementById('comments-btn').style.border = \"none\"\n        document.getElementById('settings-btn').style.borderBottom = \"3px solid #faed26\"\n        document.getElementById('songs-btn').style.fontWeight = \"normal\"\n        document.getElementById('comments-btn').style.fontWeight = \"normal\"\n        document.getElementById('settings-btn').style.fontWeight = \"bold\"\n    }\n    \n    \n    render() { \n        function User ({username, history}){\n            function toUserProfile(){\n                history.history.push('/' + username)\n            }\n\n            return (\n                <button className=\"user-btn\" onClick = {toUserProfile}> {username} </button>\n            )\n        }\n        return ( \n            <div className=\"container-fluid playlist-container\">\n                {/* Home and Profile Icons */}\n                <HeaderNavbar  props = {this.props}/>\n\n                <div className=\"container-fluid playlist-data-container\">\n                    {/* Information about the Playlist */}\n                    <div className=\"information-row\">\n                        <div className=\"col text-center align-self-center playlist-col\">\n                            <div className=\"likes\">\n                                <AiFillHeart size={34} />\n                                {this.getLikes()} \n                            </div>\n                        </div>\n\n                        <div className=\"col text-center align-self-left playlist-col\">\n                            <h2>{this.getPlaylistName()} {this.state.public ? <AiFillEye size={24}/> : <AiFillEyeInvisible size={24}/>}</h2>\n\n                            <h5> Playlist By: <User username = {this.getUserName()} history = {this.props} /> </h5>\n                        </div>\n                        <div className=\"col public-col\">\n\n                        </div>\n                    </div>\n\n                    {/* Songs, Likes and Comments, Settings Navbar */}\n                    {this.state.owner ? \n                        <div className=\"navigation-row\">\n                            <div className=\"col text-center playlist-col\">\n                                <button id = \"songs-btn\" className = \"songs-btn\" onClick = {this.setSongsVisible} style = {{borderBottom : \"3px solid #faed26\", fontWeight : \"bold\"}} > Songs </button>\n                            </div>\n\n                            <div className=\"col text-center playlist-col\">\n                                    <button id = \"comments-btn\" className = \"comments-btn\" onClick = {this.setCommentsVisible}> Comments </button> \n                            </div>\n\n                            <div className=\"col text-center playlist-col\">\n                                    <button id = \"settings-btn\" className = \"settings-btn\"onClick = {this.setSettingVisible}> Settings </button> \n                            </div>\n                        </div> : \n                        <div className=\"row navigation-row\">\n                            <div className=\"col text-center playlist-col\">\n                                <button id = \"songs-btn\" className = \"songs-btn\" onClick = {this.setSongsVisible} style = {{borderBottom : \"3px solid #faed26\", fontWeight : \"bold\"}}> Songs </button>\n                            </div>\n    \n                            <div className=\"col text-center playlist-col\">\n                                    <button id = \"comments-btn\" className = \"comments-btn\" onClick = {this.setCommentsVisible}> Comments </button> \n                            </div>\n                        </div>             \n                    }\n\n                    {/* Render \"Songs\", \"Comments\", \"Settings\" */}\n                    {this.state.songsVisible ? <Songlist playlist = {this.getPlaylist()}/> : null}\n                    {this.state.commentsVisible ? <Comments playlist = {this.getPlaylist()}  /> : null}\n                    {this.state.settingsVisible ? <PlaylistSetting playlist_name = {this.getPlaylistName()} public = {this.state.public}/> : null}\n                </div>\n                <PlaylistNavbar/>\n            </div>\n            \n         );\n    }\n}\n \nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}