{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/easytunes/src/components/Playlist/Comments/Comments.js\";\nimport React, { Component } from 'react';\nimport { BsFillCaretUpFill, BsFillCaretDownFill, BsLayoutThreeColumns } from 'react-icons/bs';\nimport './Comments.css';\nimport mockData from '../../../mock_data.json';\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.playlists = mockData.playlists;\n    this.state = {\n      playlist: this.props.playlist\n    };\n\n    this.getComments = () => {\n      console.log(this.state.playlist);\n      return this.state.playlist.comments;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderComments(this.getComments()));\n  }\n\n  renderComments(list) {\n    console.log(list);\n\n    function ReplyButton(elem) {\n      const [showReplyVisible, setVisibility] = React.useState(true);\n\n      function toggleVisibility() {\n        setVisibility(showReplyVisible => !showReplyVisible);\n      }\n\n      let res = elem.replies.map(function (reply, j) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: reply.username + j,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"username-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }, reply.username), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"comment-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }\n        }, reply.message));\n      }, this);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, showReplyVisible ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"view-replies-btn\",\n        onClick: toggleVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(BsFillCaretDownFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }), \"Show Replies\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"view-replies-btn\",\n        onClick: toggleVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(BsFillCaretUpFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }), \"Hide Replies\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container replies-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, res))));\n    }\n\n    let comments = list.map(function (elem, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: elem.username + \" \" + i.toString(),\n        className: \"container result-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row username-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, elem.username), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row comment-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, elem.message), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row replies-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReplyButton, {\n        replies: elem.replies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      })));\n    }, this);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, comments);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/easytunes/src/components/Playlist/Comments/Comments.js"],"names":["React","Component","BsFillCaretUpFill","BsFillCaretDownFill","BsLayoutThreeColumns","mockData","Comments","playlists","state","playlist","props","getComments","console","log","comments","render","renderComments","list","ReplyButton","elem","showReplyVisible","setVisibility","useState","toggleVisibility","res","replies","map","reply","j","username","message","i","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BsFillCaretUpFill, BsFillCaretDownFill, BsLayoutThreeColumns} from 'react-icons/bs'\nimport './Comments.css'\n\nimport mockData from '../../../mock_data.json'\nclass Comments extends Component {\n    playlists = mockData.playlists\n\n    state = { \n        playlist : this.props.playlist,\n     }\n\n    \n\n    getComments = () => {\n        console.log(this.state.playlist)\n        return this.state.playlist.comments\n    }\n    render() {\n        return (\n            <>\n                {this.renderComments(this.getComments())}\n            </>\n        );\n    }\n\n\n    renderComments(list){\n        console.log(list)\n        function ReplyButton(elem){\n            const [showReplyVisible, setVisibility] = React.useState(true);\n            \n            function toggleVisibility(){\n                setVisibility(showReplyVisible => !showReplyVisible)\n            }\n\n            let res = elem.replies.map(function(reply, j){\n                return (\n                    <li key = {reply.username + j}>\n                        <div className=\"username-row\">{reply.username}</div>\n                        <div className=\"comment-row\">{reply.message}</div>\n                        \n                    </li>\n                )\n            }, this)\n\n            return (\n                <div>\n                    {\n                        showReplyVisible ? \n                        <>\n                        <button className = \"view-replies-btn\" onClick={toggleVisibility}> \n                                <BsFillCaretDownFill/> \n                                Show Replies \n                        </button>\n                        {/* {document.getElementById(id).style.display = \"none\"} */}\n                        </>\n                        :\n                        <>\n                        <button className = \"view-replies-btn\" onClick={toggleVisibility}> \n                                <BsFillCaretUpFill/> \n                                Hide Replies \n                        </button>\n                         \n                            <div className=\"container replies-container\"  >\n                                <ul>\n                                    {res}\n                                </ul>\n                            </div> \n                            \n                      \n                        </>\n                    }\n                </div>\n            );\n        }\n\n \n\n        let comments = list.map(function(elem, i){\n            \n            return (\n                    <div key = {elem.username + \" \" + i.toString()}  className=\"container result-container\">\n                        <div className=\"row username-row\">\n                            {elem.username}\n                        </div>\n\n                        <div className=\"row comment-row\">\n                            {elem.message}\n                        </div>\n                        \n                        <div className=\"row replies-row\">\n                            <ReplyButton replies = {elem.replies}/>\n        \n                        </div>\n                    </div>\n            )\n        }, this)\n        return (\n            <>\n                {comments}\n            </>\n        );\n    }\n}\n \nexport default Comments;"]},"metadata":{},"sourceType":"module"}