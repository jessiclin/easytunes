{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/easytunes/src/components/pages/Playlist/Comments/Comments.js\";\nimport React, { Component } from 'react';\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from 'react-icons/bs';\nimport './Comments.css';\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleRenderReplies = id => {};\n  }\n\n  render() {\n    let list = [];\n\n    for (let i = 0; i < 2; i++) {\n      let user = \"user\" + i;\n      list.push({\n        username: user,\n        comment: \"This is a great playlist\",\n        replies: [{\n          username: user + 1,\n          comment: \"Great playlist to listen to\"\n        }, {\n          username: \"user\",\n          comment: \"Thank you\"\n        }]\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderComments(list));\n  }\n\n  renderComments(list) {\n    let comments = list.map(function (elem, i) {\n      let res = elem.replies.map(function (reply, j) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: elem.username + \" \" + i + \" \" + reply.username + \" \" + j,\n          id: \"comment \" + i + \" replies\",\n          className: \"container reply\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row username-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }\n        }, reply.username), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row comment-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }\n        }, reply.comment));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: elem.username + \" \" + i.toString(),\n        className: \"container result-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row username-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, elem.username), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row comment-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, elem.comment), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row replies\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"view-replies-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, \" \", /*#__PURE__*/React.createElement(BsFillCaretUpFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 69\n        }\n      }), \" Hide Replies \"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"reply-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, \"Reply\"), res));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, null, comments);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/easytunes/src/components/pages/Playlist/Comments/Comments.js"],"names":["React","Component","BsFillCaretDownFill","BsFillCaretUpFill","Comments","state","handleRenderReplies","id","render","list","i","user","push","username","comment","replies","renderComments","comments","map","elem","res","reply","j","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAsD,gBAAtD;AACA,OAAO,gBAAP;;AACA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB,EADqB;;AAAA,SAkC7BC,mBAlC6B,GAkCNC,EAAD,IAAO,CAE5B,CApC4B;AAAA;;AAG7BC,EAAAA,MAAM,GAAG;AACL,QAAIC,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,UAAIC,IAAI,GAAG,SAASD,CAApB;AACAD,MAAAA,IAAI,CAACG,IAAL,CACI;AACIC,QAAAA,QAAQ,EAAGF,IADf;AAEIG,QAAAA,OAAO,EAAG,0BAFd;AAGIC,QAAAA,OAAO,EAAG,CACN;AACIF,UAAAA,QAAQ,EAAGF,IAAI,GAAG,CADtB;AAEIG,UAAAA,OAAO,EAAE;AAFb,SADM,EAKN;AACID,UAAAA,QAAQ,EAAE,MADd;AAEIC,UAAAA,OAAO,EAAE;AAFb,SALM;AAHd,OADJ;AAiBH;;AAED,wBACI,0CACK,KAAKE,cAAL,CAAoBP,IAApB,CADL,CADJ;AAKH;;AAMDO,EAAAA,cAAc,CAACP,IAAD,EAAM;AAChB,QAAIQ,QAAQ,GAAGR,IAAI,CAACS,GAAL,CAAS,UAASC,IAAT,EAAeT,CAAf,EAAiB;AACrC,UAAIU,GAAG,GAAGD,IAAI,CAACJ,OAAL,CAAaG,GAAb,CAAiB,UAASG,KAAT,EAAgBC,CAAhB,EAAkB;AACzC,4BACI;AAAK,UAAA,GAAG,EAAIH,IAAI,CAACN,QAAL,GAAgB,GAAhB,GAAsBH,CAAtB,GAA0B,GAA1B,GAAgCW,KAAK,CAACR,QAAtC,GAAiD,GAAjD,GAAuDS,CAAnE;AAAsE,UAAA,EAAE,EAAI,aAAaZ,CAAb,GAAiB,UAA7F;AAAyG,UAAA,SAAS,EAAC,iBAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEQ;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCW,KAAK,CAACR,QADP,CAFR,eAKQ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKQ,KAAK,CAACP,OADX,CALR,CADJ;AAYH,OAbS,CAAV;AAcA,0BACQ;AAAK,QAAA,GAAG,EAAIK,IAAI,CAACN,QAAL,GAAgB,GAAhB,GAAsBH,CAAC,CAACa,QAAF,EAAlC;AAAiD,QAAA,SAAS,EAAC,4BAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,IAAI,CAACN,QADV,CADJ,eAKI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKM,IAAI,CAACL,OADV,CALJ,eASI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAG,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,mBADJ,eAGI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAKKM,GALL,CATJ,CADR;AAuBH,KAtCc,CAAf;AAwCA,wBACI,0CACKH,QADL,CADJ;AAKH;;AApF4B;;AAuFjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport { BsFillCaretDownFill, BsFillCaretUpFill} from 'react-icons/bs'\nimport './Comments.css'\nclass Comments extends Component {\n    state = {  }\n\n    render() {\n        let list = [];\n        \n        for (let i = 0; i < 2; i++){\n            let user = \"user\" + i\n            list.push(\n                {\n                    username : user,\n                    comment : \"This is a great playlist\",\n                    replies : [\n                        {\n                            username : user + 1,\n                            comment: \"Great playlist to listen to\"\n                        },\n                        {\n                            username: \"user\",\n                            comment: \"Thank you\"\n                        }\n\n                    ]\n                }\n            )\n        }\n\n        return (\n            <>\n                {this.renderComments(list)}\n            </>\n        );\n    }\n\n    handleRenderReplies = (id) =>{\n       \n    }\n\n    renderComments(list){\n        let comments = list.map(function(elem, i){\n            let res = elem.replies.map(function(reply, j){\n                return (\n                    <div key = {elem.username + \" \" + i + \" \" + reply.username + \" \" + j} id = {\"comment \" + i + \" replies\"} className=\"container reply\">\n                  \n                            <div className=\"row username-row\">\n                            {reply.username}\n                            </div>\n                            <div className=\"row comment-row\">\n                                {reply.comment}\n                            </div>\n                     \n                    </div>\n                )\n            })\n            return (\n                    <div key = {elem.username + \" \" + i.toString()}  className=\"container result-container\">\n                        <div className=\"row username-row\">\n                            {elem.username}\n                        </div>\n\n                        <div className=\"row comment-row\">\n                            {elem.comment}\n                        </div>\n                        \n                        <div className=\"row replies\">\n                            <button className = \"view-replies-btn\"> <BsFillCaretUpFill/> Hide Replies </button>\n                       \n                            <button className=\"reply-btn\">Reply</button>\n                      \n                            {res}\n                        </div>\n                            \n\n\n                    </div>\n              \n            )\n        })\n    \n        return (\n            <>\n                {comments}\n            </>\n        );\n    }\n}\n \nexport default Comments;"]},"metadata":{},"sourceType":"module"}