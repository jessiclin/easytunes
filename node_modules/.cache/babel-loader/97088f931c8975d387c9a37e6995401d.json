{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/easytunes/src/components/pages/Playlists/Playlists.js\";\nimport React, { Component } from 'react';\nimport { AiFillHome, AiFillHeart, AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\nimport { RiUserFollowLine, RiUserAddLine } from 'react-icons/ri';\nimport { CgPlayButtonO, CgPlayPauseO } from 'react-icons/cg';\nimport { RiPlayListLine } from 'react-icons/ri';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport './Playlists.css';\n\nclass Playlists extends Component {\n  constructor(...args) {\n    super(...args);\n    this.savedPlaylists = [{\n      playlist_id: 2,\n      user_id: 2,\n      username: \"playlist maker\",\n      name: \"My Favorites\",\n      date_created: {\n        month: \"October\",\n        day: 3,\n        year: 2020\n      },\n      public: true,\n      likes: 2,\n      comments: [{\n        username: \"user\",\n        date: {\n          month: \"October\",\n          day: 4,\n          year: 2020\n        },\n        message: \"Nice!\",\n        replies: [{\n          username: \"user2\",\n          date: {\n            month: \"October\",\n            day: 4,\n            year: 2020\n          },\n          message: \"Thanks!\"\n        }]\n      }],\n      songs: [{\n        song_id: 1,\n        name: \"<>\",\n        uploaded: false\n      }]\n    }];\n    this.myPlaylist = [{\n      playlist_id: 1,\n      user_id: 1,\n      username: \"user\",\n      name: \"Good Songs\",\n      date_created: {\n        month: \"October\",\n        day: 4,\n        year: 2020\n      },\n      public: true,\n      likes: 1,\n      comments: [{\n        username: \"user2\",\n        date: {\n          month: \"October\",\n          day: 5,\n          year: 2020\n        },\n        message: \"Great Playlist!\",\n        replies: [{\n          username: \"user\",\n          date: {\n            month: \"October\",\n            day: 5,\n            year: 2020\n          },\n          message: \"Thanks!\"\n        }]\n      }],\n      songs: [{\n        song_id: 1,\n        name: \"Placeholder\",\n        uploaded: false\n      }, {\n        song_id: 2,\n        name: \"Placeholder\",\n        uploaded: false\n      }]\n    }];\n    this.state = {\n      showSavedPlaylists: false,\n      showMyPlaylists: true,\n      self: false,\n      following: true\n    };\n\n    this.handleHome = () => {\n      const {\n        history\n      } = this.props;\n      console.log(history);\n      history.push('/');\n    };\n\n    this.getUserName = () => {\n      const user = this.props.match.params.userid;\n      return user;\n    };\n\n    this.handleDelete = event => {\n      console.log(\"Delete Playlist\");\n    };\n\n    this.handlePlaylistClick = event => {\n      const id = event.target.id; // Find playlist name and user\n\n      let name = null;\n      let username = null;\n\n      for (var i = 0; i < this.myPlaylist.length; i++) {\n        if (this.myPlaylist[i].playlist_id == id) {\n          name = this.myPlaylist[i].name;\n          username = this.myPlaylist[i].username;\n          break;\n        }\n      }\n\n      if (name === null) {\n        for (var i = 0; i < this.savedPlaylists.length; i++) {\n          if (this.savedPlaylists[i].playlist_id == id) {\n            name = this.savedPlaylists[i].name;\n            username = this.savedPlaylists[i].username;\n            break;\n          }\n        }\n      }\n\n      const url = '/' + username.replace(/\\s/g, '%20') + '/playlists/' + name.replace(/\\s/g, '%20');\n      const {\n        history\n      } = this.props;\n      history.push(url);\n    };\n\n    this.handleMyPlaylistView = () => {\n      this.setState({\n        showSavedPlaylists: false,\n        showMyPlaylists: true\n      });\n      document.getElementById('my-playlists-btn').style.borderBottom = \"2px solid #faed26\";\n      document.getElementById('saved-playlists-btn').style.border = \"none\";\n      document.getElementById('my-playlists-btn').style.fontWeight = \"bold\";\n      document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\";\n    };\n\n    this.handleSavedPlaylistView = () => {\n      this.setState({\n        showSavedPlaylists: true,\n        showMyPlaylists: false\n      });\n      document.getElementById('my-playlists-btn').style.border = \"none\";\n      document.getElementById('saved-playlists-btn').style.borderBottom = \"2px solid #faed26\";\n      document.getElementById('my-playlists-btn').style.fontWeight = \"normal\";\n      document.getElementById('saved-playlists-btn').style.fontWeight = \"bold\";\n    };\n\n    this.renderMyPlaylists = () => {\n      let playlists = this.myPlaylist.map(function (playlist) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: playlist.playlist_id,\n          className: \"row playlist-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(RiPlayListLine, {\n          size: 50,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 22\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 21\n          }\n        }, playlist.name, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }\n        }, \"  \", playlist.public ? /*#__PURE__*/React.createElement(AiFillEye, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 52\n          }\n        }) : /*#__PURE__*/React.createElement(AiFillEyeInvisible, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 67\n          }\n        }), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }\n        }, playlist.songs.length, \" \", playlist.songs.length > 1 ? \"songs\" : \"song\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AiFillHeart, {\n          id: playlist.name,\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        }), playlist.likes), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"playlist-btn\",\n          id: playlist.playlist_id,\n          onClick: this.handlePlaylistClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"play-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CgPlayButtonO, {\n          style: {\n            color: '#faed26'\n          },\n          size: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"delete-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AiOutlineDelete, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }\n        })));\n      }, this);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, playlists);\n    };\n\n    this.renderSavedPlaylists = () => {\n      let playlists = this.savedPlaylists.map(function (playlist) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: playlist.playlist_id,\n          className: \"row playlist-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(RiPlayListLine, {\n          size: 50,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 26\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }\n        }, playlist.name), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }\n        }, playlist.songs.length, \" \", playlist.songs.length > 1 ? \"songs\" : \"song\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }\n        }, playlist.username), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"playlist-btn\",\n          id: playlist.playlist_id,\n          onClick: this.handlePlaylistClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"play-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CgPlayButtonO, {\n          size: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"delete-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AiOutlineDelete, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }\n        })));\n      }, this);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, playlists);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid playlist-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"home\",\n      onClick: this.handleHome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AiFillHome, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right account-col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MdAccountCircle, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row information-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, this.getUserName(), !this.state.self ? !this.state.following ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RiUserAddLine, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 40\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RiUserFollowLine, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 40\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, \" User Since:\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row navigation-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"my-playlists-btn\",\n      className: \"my-playlists-btn\",\n      onClick: this.handleMyPlaylistView,\n      style: {\n        borderBottom: \"2px solid #faed26\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 28\n      }\n    }, \"  My Playlists \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"saved-playlists-btn\",\n      className: \"saved-playlists-btn\",\n      onClick: this.handleSavedPlaylistView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, \" Saved Playlists \"))), this.state.showSavedPlaylists ? this.renderSavedPlaylists() : null, this.state.showMyPlaylists ? this.renderMyPlaylists() : null));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/easytunes/src/components/pages/Playlists/Playlists.js"],"names":["React","Component","AiFillHome","AiFillHeart","AiFillEyeInvisible","AiFillEye","MdAccountCircle","RiUserFollowLine","RiUserAddLine","CgPlayButtonO","CgPlayPauseO","RiPlayListLine","AiOutlineDelete","Playlists","savedPlaylists","playlist_id","user_id","username","name","date_created","month","day","year","public","likes","comments","date","message","replies","songs","song_id","uploaded","myPlaylist","state","showSavedPlaylists","showMyPlaylists","self","following","handleHome","history","props","console","log","push","getUserName","user","match","params","userid","handleDelete","event","handlePlaylistClick","id","target","i","length","url","replace","handleMyPlaylistView","setState","document","getElementById","style","borderBottom","border","fontWeight","handleSavedPlaylistView","renderMyPlaylists","playlists","map","playlist","color","renderSavedPlaylists","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport {AiFillHome,AiFillHeart, AiFillEyeInvisible, AiFillEye} from 'react-icons/ai'\nimport {MdAccountCircle} from 'react-icons/md'\nimport {RiUserFollowLine, RiUserAddLine} from 'react-icons/ri'\nimport {CgPlayButtonO, CgPlayPauseO} from 'react-icons/cg'\nimport {RiPlayListLine} from 'react-icons/ri'\nimport {AiOutlineDelete} from 'react-icons/ai'\nimport './Playlists.css'\n\nclass Playlists extends Component {\n    savedPlaylists = [\n        {\n            playlist_id : 2,\n            user_id : 2,\n            username : \"playlist maker\",\n            name : \"My Favorites\",\n            date_created : {\n                month : \"October\",\n                day : 3,\n                year : 2020\n            },\n            public : true,\n            likes : 2,\n            comments : [\n                {\n                    username : \"user\",\n                    date : {\n                        month : \"October\",\n                        day : 4,\n                        year : 2020\n                    },\n                    message : \"Nice!\",\n                    replies : [\n                        {\n                            username : \"user2\",\n                            date : {\n                                month : \"October\",\n                                day : 4,\n                                year : 2020\n                            },\n                            message : \"Thanks!\"\n                        }\n                    ]    \n                }\n            ],\n            songs : [\n                {\n                    song_id : 1,\n                    name : \"<>\",\n                    uploaded : false\n                }\n            ]\n        }\n    ]\n\n    myPlaylist = [\n        {\n            playlist_id : 1,\n            user_id : 1,\n            username : \"user\",\n            name : \"Good Songs\",\n            date_created : {\n                month : \"October\",\n                day : 4,\n                year : 2020\n            },\n            public : true,\n            likes : 1,\n            comments : [\n                {\n                    username : \"user2\",\n                    date : {\n                        month : \"October\",\n                        day : 5,\n                        year : 2020\n                    },\n                    message : \"Great Playlist!\",\n                    replies : [\n                        {\n                            username : \"user\",\n                            date : {\n                                month : \"October\",\n                                day : 5,\n                                year : 2020\n                            },\n                            message : \"Thanks!\"\n                        }\n                    ]\n                }\n            ],\n            songs : [\n                {\n                    song_id : 1,\n                    name : \"Placeholder\",\n                    uploaded : false\n                },\n                {\n                    song_id : 2,\n                    name : \"Placeholder\",\n                    uploaded : false\n                }\n            ]\n        }\n    ]\n\n    state = { \n        showSavedPlaylists: false,\n        showMyPlaylists: true,\n        self: false,\n        following: true\n    }\n\n    // Redirect to Home when home button is pressed \n    handleHome = () => {\n        const {history } = this.props;\n        console.log(history);\n        history.push('/')\n    }\n\n    // Get the username \n    getUserName = () => {\n        const user = this.props.match.params.userid;\n        return user\n    }\n\n    handleDelete = (event) => {\n        console.log(\"Delete Playlist\")\n    }\n\n    // Go to playlist page \n    handlePlaylistClick = (event) => {\n        const id = event.target.id\n\n        // Find playlist name and user\n        let name = null\n        let username = null\n        for (var i = 0; i < this.myPlaylist.length; i++){\n            if (this.myPlaylist[i].playlist_id == id){\n                name = this.myPlaylist[i].name;\n                username = this.myPlaylist[i].username;\n                break;\n            }\n        }\n\n        if (name === null) {\n            for (var i = 0; i < this.savedPlaylists.length; i++){\n                if (this.savedPlaylists[i].playlist_id == id){\n                    name = this.savedPlaylists[i].name;\n                    username = this.savedPlaylists[i].username;\n                    break;\n                } \n            }\n        }\n\n        const url = '/' + username.replace(/\\s/g, '%20') + '/playlists/' + name.replace(/\\s/g, '%20')\n        const {history } = this.props;\n        history.push(url)\n    }\n    \n    // Button click on \"My Playlists\"\n    handleMyPlaylistView = () => {\n        this.setState({\n            showSavedPlaylists: false,\n            showMyPlaylists: true\n        })\n\n        document.getElementById('my-playlists-btn').style.borderBottom = \"2px solid #faed26\"\n        document.getElementById('saved-playlists-btn').style.border = \"none\";\n        document.getElementById('my-playlists-btn').style.fontWeight = \"bold\"\n        document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\"\n    }\n\n    // Button click on \"Saved Playlists\"\n    handleSavedPlaylistView = () =>{\n        this.setState({\n            showSavedPlaylists: true,\n            showMyPlaylists: false\n        })\n        document.getElementById('my-playlists-btn').style.border = \"none\";\n        document.getElementById('saved-playlists-btn').style.borderBottom = \"2px solid #faed26\"\n        document.getElementById('my-playlists-btn').style.fontWeight = \"normal\"\n        document.getElementById('saved-playlists-btn').style.fontWeight = \"bold\"\n    }\n    \n    render() { \n        return ( \n            <div>\n                <div className=\"container-fluid playlist-container\">\n                    {/* Home Button, Username, Account Icon */}\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button className=\"home\" onClick = {this.handleHome}>\n                                <AiFillHome size={24}/>\n                            </button>\n                        </div>\n                        \n                        <div className=\"col text-right account-col\">\n                            <MdAccountCircle size={24}/>\n                        </div>\n                    </div>\n\n                    {/* Information Bar about the user */}\n                    <div className=\"row information-row\">\n                        <div className=\"col text-center\">\n                            <h2>{this.getUserName()}                            \n                             \n                             {!this.state.self ?\n                                !this.state.following ? \n                                <span> <RiUserAddLine size= {24}/> </span> :\n                                <span> <RiUserFollowLine size={24}/></span>\n                            : null}\n\n                            </h2>\n                            <h5> User Since:</h5>\n                        </div>\n                    </div>\n                    \n                    {/* Navigation bar between \"My Playlist\" and \"Saved Playlists\" */}\n                    <div className=\"row navigation-row\">\n                        <div className=\"col\">\n                           <button id = \"my-playlists-btn\" className = \"my-playlists-btn\" onClick = {this.handleMyPlaylistView} style = {{borderBottom : \"2px solid #faed26\", fontWeight : \"bold\"}}>  My Playlists </button>\n                        </div>\n\n                        <div className=\"col\">\n                            <button id = \"saved-playlists-btn\" className = \"saved-playlists-btn\" onClick = {this.handleSavedPlaylistView}> Saved Playlists </button>\n                        </div>\n                    </div>\n\n                    {/* Renders \"My Playlist\" and \"Saved Playlists\" */}\n                    {this.state.showSavedPlaylists ? this.renderSavedPlaylists() : null}\n                    {this.state.showMyPlaylists ? this.renderMyPlaylists() : null}\n                </div>\n            </div>\n         );\n    }\n\n    renderMyPlaylists = () => {\n        let playlists = this.myPlaylist.map(function(playlist) {\n            return (\n                <div key = {playlist.playlist_id} className=\"row playlist-row\">\n                    <div className=\"col\">\n                     <RiPlayListLine size = {50}/>\n                    </div>\n\n                    <div className=\"col text-left\">\n                        {playlist.name}\n                        <span>  {playlist.public ? <AiFillEye/> : < AiFillEyeInvisible/>} </span>\n                    </div>\n\n                    <div className=\"col text-left\">\n                        {playlist.songs.length} {playlist.songs.length > 1 ? \"songs\" : \"song\"} \n                    </div>\n\n                    <div className=\"col text-left\">\n                        <AiFillHeart id={playlist.name} size = {24}/>{playlist.likes} \n                    </div>\n  \n                    <button className=\"playlist-btn\" id={playlist.playlist_id} onClick = {this.handlePlaylistClick}/>\n                    \n                    <button className=\"play-btn\">\n                        <CgPlayButtonO style={{color: '#faed26'}} size = {30}/>\n                    </button>\n\n                    <button className=\"delete-btn\">\n                        <AiOutlineDelete size = {24}/>\n                    </button>\n                </div>\n            )\n        }, this)\n\n        return (\n            <>\n            {playlists}\n            </>\n        );\n    }\n\n    renderSavedPlaylists = () => {\n        let playlists = this.savedPlaylists.map(function(playlist) {\n            return (\n                <div key = {playlist.playlist_id} className=\"row playlist-row\">\n                   \n                    <div className=\"col\">\n                         <RiPlayListLine size = {50}/>\n                    </div>\n                    \n                    <div className=\"col text-left\">\n                        {playlist.name} \n                    </div>\n                    \n                    <div className=\"col text-left\">\n                        {playlist.songs.length} {playlist.songs.length > 1 ? \"songs\" : \"song\"} \n                    </div>\n                    \n                    <div className=\"col text-left\">\n                        {playlist.username}\n                    </div>\n\n                    <button className=\"playlist-btn\" id={playlist.playlist_id} onClick = {this.handlePlaylistClick}/>\n                    \n                    <button className=\"play-btn\">\n                        <CgPlayButtonO size = {30}/>\n                    </button>\n                    \n                    <button className=\"delete-btn\">\n                        <AiOutlineDelete size = {24}/>\n                    </button>\n \n                </div>\n            )\n        }, this)\n\n        return (\n            <>\n            {playlists}\n            </>\n        );\n    }\n}\n \nexport default Playlists;"]},"metadata":{},"sourceType":"module"}