{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltesta/Desktop/easytunes/src/components/Playlists/Playlists.js\";\nimport React, { Component } from 'react';\nimport { AiFillHome, AiFillHeart, AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\nimport { RiUserFollowLine, RiUserAddLine } from 'react-icons/ri';\nimport { RiPlayListLine } from 'react-icons/ri';\nimport { AiOutlineDelete, AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai'; // FaRegPauseCircle\n\nimport { FaRegPlayCircle } from 'react-icons/fa';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\nimport PlaylistNavbar from '../PlaylistNavbar/PlaylistNavbar';\nimport HeaderNavbar from '../HeaderNavbar/HeaderNavbar';\nimport './Playlists.css';\nimport mockData from '../../mock_data.json';\n\nclass Playlists extends Component {\n  constructor(...args) {\n    super(...args);\n    this.users = mockData.users;\n    this.playlists = mockData.playlists;\n    this.state = {\n      showSavedPlaylists: false,\n      showMyPlaylists: true,\n      showUploadedSongs: false,\n      self: false,\n      following: true\n    };\n\n    this.handleHome = () => {\n      const {\n        history\n      } = this.props;\n      console.log(history);\n      history.push('/home');\n    };\n\n    this.getUserName = () => {\n      const user = this.props.match.params.userid;\n      return user; // const users = mockData.users\n      // console.log(users[0].username)\n      // return users[0].username)\n    };\n\n    this.handleDelete = event => {\n      console.log(\"Delete Playlist\");\n    };\n\n    this.getUserInfoById = id => {\n      for (var i = 0; i < this.users.length; i++) {\n        if (parseInt(this.users[i].user_id) == id) {\n          return this.users[i];\n        }\n      }\n    };\n\n    this.getAccountCreationDate = () => {\n      const user = this.getUserName();\n\n      for (let i = 0; i < this.users.length; i++) {\n        if (this.users[i].username === user) return this.users[i].joined.month + \" \" + this.users[i].joined.day + \", \" + this.users[i].joined.year;\n      }\n    };\n\n    this.getPlaylistsByUsername = username => {\n      let playlists = this.playlists;\n      let myPlaylists = [];\n\n      for (let i = 0; i < playlists.length; i++) {\n        if (playlists[i].username === username) myPlaylists.push(playlists[i]);\n      }\n\n      return myPlaylists;\n    };\n\n    this.getPlaylistById = playlist_id => {\n      let playlists = this.playlists;\n\n      for (let i = 0; i < playlists.length; i++) {\n        if (parseInt(playlists[i].playlist_id) === playlist_id) return playlists[i];\n      }\n    };\n\n    this.getSavedPlaylists = username => {\n      let users = this.users;\n      let playlistInfo = null;\n\n      for (let i = 0; i < users.length; i++) {\n        if (users[i].username === username) playlistInfo = users[i].saved_playlists;\n      }\n\n      let playlists = [];\n\n      for (let i = 0; i < playlistInfo.length; i++) {\n        playlists.push(this.getPlaylistById(parseInt(playlistInfo[i].playlist_id)));\n      }\n\n      return playlists;\n    };\n\n    this.handleMyPlaylistView = () => {\n      this.setState({\n        showSavedPlaylists: false,\n        showMyPlaylists: true,\n        showUploadedSongs: false\n      });\n      document.getElementById('my-playlists-btn').style.borderBottom = \"2px solid #faed26\";\n      document.getElementById('saved-playlists-btn').style.borderBottom = \"none\";\n      document.getElementById('uploaded-songs-btn').style.borderBottom = \"none\";\n      document.getElementById('my-playlists-btn').style.fontWeight = \"bold\";\n      document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\";\n      document.getElementById('uploaded-songs-btn').style.fontWeight = \"normal\";\n    };\n\n    this.handleSavedPlaylistView = () => {\n      this.setState({\n        showSavedPlaylists: true,\n        showMyPlaylists: false,\n        showUploadedSongs: false\n      });\n      document.getElementById('my-playlists-btn').style.borderBottom = \"none\";\n      document.getElementById('saved-playlists-btn').style.borderBottom = \"2px solid #faed26\";\n      document.getElementById('uploaded-songs-btn').style.borderBottom = \"none\";\n      document.getElementById('my-playlists-btn').style.fontWeight = \"normal\";\n      document.getElementById('saved-playlists-btn').style.fontWeight = \"bold\";\n      document.getElementById('uploaded-songs-btn').style.fontWeight = \"normal\";\n    };\n\n    this.handleUploadView = () => {\n      this.setState({\n        showSavedPlaylists: false,\n        showMyPlaylists: false,\n        showUploadedSongs: true\n      });\n      document.getElementById('my-playlists-btn').style.borderBottom = \"none\";\n      document.getElementById('saved-playlists-btn').style.borderBottom = \"none\";\n      document.getElementById('uploaded-songs-btn').style.borderBottom = \"2px solid #faed26\";\n      document.getElementById('my-playlists-btn').style.fontWeight = \"normal\";\n      document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\";\n      document.getElementById('uploaded-songs-btn').style.fontWeight = \"bold\";\n    };\n\n    this.isSelf = () => {\n      let viewing = this.getUserName();\n      let user = this.users[0];\n      if (viewing === user.username) return true;\n      return false;\n    };\n\n    this.isFollowing = () => {\n      let user = this.users[0];\n      let viewing = this.getUserName();\n\n      for (let i = 0; i < user.following.length; i++) {\n        console.log(user.following[i].user_id);\n        console.log(viewing.user_id);\n\n        if (user.following[i].username === viewing) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.renderPlaylists = () => {\n      let playlists = this.state.showMyPlaylists ? this.getPlaylistsByUsername(this.getUserName()) : this.getSavedPlaylists(this.getUserName());\n      const showMine = this.state.showMyPlaylists;\n\n      function PlaylistButton({\n        playlist,\n        history\n      }) {\n        function toPlaylist() {\n          history.history.push('/' + playlist.username.replace(/\\s/g, '%20') + '/playlist=' + playlist.name.replace(/\\s/g, '%20'));\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"playlist-row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(RiPlayListLine, {\n          size: 50,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }\n        }, playlist.name, showMine ? /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 37\n          }\n        }, \"  \", playlist.public ? /*#__PURE__*/React.createElement(AiFillEye, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 64\n          }\n        }) : /*#__PURE__*/React.createElement(AiFillEyeInvisible, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 79\n          }\n        }), \" \") : null), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }\n        }, playlist.songs.length, \" \", playlist.songs.length > 1 ? \"songs\" : \"song\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col text-left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }\n        }, showMine ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AiFillHeart, {\n          id: playlist.name,\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 39\n          }\n        }), \" \", playlist.likes, \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, playlist.username)), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"playlist-btn\",\n          id: playlist.playlist_id,\n          onClick: toPlaylist,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"play-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FaRegPlayCircle, {\n          size: 30,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"delete-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(AiOutlineDelete, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }\n        })));\n      }\n\n      playlists = playlists.map(function (playlist) {\n        return /*#__PURE__*/React.createElement(PlaylistButton, {\n          playlist: playlist,\n          history: this.props,\n          key: playlist.playlist_id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }\n        });\n      }, this);\n\n      function NewButton({\n        text\n      }) {\n        const [visible, setVisibility] = React.useState(false);\n\n        function toggleVisibilityTrue() {\n          setVisibility(visible => true);\n        }\n\n        function toggleVisibilityFalse() {\n          setVisibility(visible => false);\n        }\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"add-btn\",\n          onClick: toggleVisibilityTrue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(IoMdAddCircleOutline, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 85\n          }\n        }), \" \"), visible ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-playlist-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }\n        }, text, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"confirm-new-btn\",\n          onClick: toggleVisibilityFalse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(AiOutlineCheckCircle, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 96\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"cancel-new-btn\",\n          onClick: toggleVisibilityFalse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(AiOutlineCloseCircle, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 96\n          }\n        }))) : null);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, playlists, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NewButton, {\n        text: \"Playlist Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 17\n        }\n      })));\n    };\n\n    this.renderUploads = () => {\n      function NewButton({\n        text\n      }) {\n        const [visible, setVisibility] = React.useState(false);\n\n        function toggleVisibilityTrue() {\n          setVisibility(visible => true);\n        }\n\n        function toggleVisibilityFalse() {\n          setVisibility(visible => false);\n        }\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"add-btn\",\n          onClick: toggleVisibilityTrue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(IoMdAddCircleOutline, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 85\n          }\n        }), \" \"), visible ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"new-playlist-box\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }\n        }, text, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }\n        }), \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"confirm-new-upload-btn\",\n          onClick: toggleVisibilityFalse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(AiOutlineCheckCircle, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 103\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"cancel-new-upload-btn\",\n          onClick: toggleVisibilityFalse,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }\n        }, \" \", /*#__PURE__*/React.createElement(AiOutlineCloseCircle, {\n          size: 24,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 103\n          }\n        }))) : null);\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"add-new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NewButton, {\n        text: \"Upload Your Audio File\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }\n      })));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid playlist-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(HeaderNavbar, {\n      props: this.props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid playlist-data-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"information-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, this.getUserName(), !this.isSelf() ? !this.isFollowing() ? /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RiUserAddLine, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 42\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(RiUserFollowLine, {\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 40\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 30\n      }\n    }, \" User Since: \", this.getAccountCreationDate()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navigation-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"my-playlists-btn\",\n      className: \"my-playlists-btn\",\n      onClick: this.handleMyPlaylistView,\n      style: {\n        borderBottom: \"2px solid #faed26\",\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 28\n      }\n    }, \"  My Playlists \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"saved-playlists-btn\",\n      className: \"saved-playlists-btn\",\n      onClick: this.handleSavedPlaylistView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, \" Saved Playlists \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"uploaded-songs-btn\",\n      className: \"uploaded-songs-btn\",\n      onClick: this.handleUploadView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \" Uploaded Songs \"))), this.state.showSavedPlaylists ? this.renderPlaylists() : null, this.state.showMyPlaylists ? this.renderPlaylists() : null, this.state.showUploadedSongs ? this.renderUploads() : null), /*#__PURE__*/React.createElement(PlaylistNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Playlists;","map":{"version":3,"sources":["/Users/maxwelltesta/Desktop/easytunes/src/components/Playlists/Playlists.js"],"names":["React","Component","AiFillHome","AiFillHeart","AiFillEyeInvisible","AiFillEye","MdAccountCircle","RiUserFollowLine","RiUserAddLine","RiPlayListLine","AiOutlineDelete","AiOutlineCheckCircle","AiOutlineCloseCircle","FaRegPlayCircle","IoMdAddCircleOutline","PlaylistNavbar","HeaderNavbar","mockData","Playlists","users","playlists","state","showSavedPlaylists","showMyPlaylists","showUploadedSongs","self","following","handleHome","history","props","console","log","push","getUserName","user","match","params","userid","handleDelete","event","getUserInfoById","id","i","length","parseInt","user_id","getAccountCreationDate","username","joined","month","day","year","getPlaylistsByUsername","myPlaylists","getPlaylistById","playlist_id","getSavedPlaylists","playlistInfo","saved_playlists","handleMyPlaylistView","setState","document","getElementById","style","borderBottom","fontWeight","handleSavedPlaylistView","handleUploadView","isSelf","viewing","isFollowing","renderPlaylists","showMine","PlaylistButton","playlist","toPlaylist","replace","name","public","songs","likes","map","NewButton","text","visible","setVisibility","useState","toggleVisibilityTrue","toggleVisibilityFalse","renderUploads","render"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport {AiFillHome,AiFillHeart, AiFillEyeInvisible, AiFillEye} from 'react-icons/ai'\nimport {MdAccountCircle} from 'react-icons/md'\nimport {RiUserFollowLine, RiUserAddLine} from 'react-icons/ri'\nimport {RiPlayListLine} from 'react-icons/ri'\nimport {AiOutlineDelete, AiOutlineCheckCircle, AiOutlineCloseCircle} from 'react-icons/ai'\n// FaRegPauseCircle\nimport {FaRegPlayCircle} from 'react-icons/fa'\nimport {IoMdAddCircleOutline}from 'react-icons/io'\nimport PlaylistNavbar from '../PlaylistNavbar/PlaylistNavbar'\nimport HeaderNavbar from '../HeaderNavbar/HeaderNavbar'\nimport './Playlists.css'\n\nimport mockData from '../../mock_data.json'\n\nclass Playlists extends Component {\n    users = mockData.users\n    playlists = mockData.playlists\n\n\n    state = { \n        showSavedPlaylists: false,\n        showMyPlaylists: true,\n        showUploadedSongs: false,\n        self: false,\n        following: true\n    }\n\n    // Redirect to Home when home button is pressed \n    handleHome = () => {\n        const {history } = this.props;\n        console.log(history);\n        history.push('/home')\n    }\n\n    // Get the username \n    getUserName = () => {\n        const user = this.props.match.params.userid;\n        return user\n        // const users = mockData.users\n        // console.log(users[0].username)\n        // return users[0].username)\n    }\n\n    handleDelete = (event) => {\n        console.log(\"Delete Playlist\")\n    }\n\n    getUserInfoById = (id) => {\n        for (var i = 0; i < this.users.length; i++){\n            if (parseInt(this.users[i].user_id) == id){\n                return this.users[i]\n            }\n        }\n    }\n\n    getAccountCreationDate = () => {\n        const user = this.getUserName()\n        \n        for (let i = 0; i < this.users.length; i++){\n           \n            if (this.users[i].username === user)\n           \n                return this.users[i].joined.month + \" \" + this.users[i].joined.day + \", \" + this.users[i].joined.year\n        }\n        \n    }\n\n    getPlaylistsByUsername = (username) => {\n        let playlists = this.playlists\n        let myPlaylists = []\n        \n        for (let i = 0; i < playlists.length; i++){\n            if (playlists[i].username === username)\n                myPlaylists.push(playlists[i])\n        }\n        return myPlaylists\n    }\n    getPlaylistById = (playlist_id) => {\n\n        let playlists = this.playlists \n\n        for (let i = 0; i < playlists.length; i++){\n            if (parseInt(playlists[i].playlist_id) === playlist_id)\n                return playlists[i]\n        }\n\n      \n    }\n    getSavedPlaylists = (username) => {\n        let users = this.users\n        let playlistInfo = null\n        for(let i = 0; i < users.length; i++){\n            if (users[i].username === username)\n                playlistInfo = users[i].saved_playlists\n        }\n\n        let playlists = []\n        for (let i = 0; i < playlistInfo.length; i++){\n            playlists.push(this.getPlaylistById(parseInt(playlistInfo[i].playlist_id)))\n        }\n        return playlists\n    }\n    \n    // Button click on \"My Playlists\"\n    handleMyPlaylistView = () => {\n        this.setState({\n            showSavedPlaylists: false,\n            showMyPlaylists: true,\n            showUploadedSongs: false\n        })\n\n        document.getElementById('my-playlists-btn').style.borderBottom = \"2px solid #faed26\"\n        document.getElementById('saved-playlists-btn').style.borderBottom = \"none\";\n        document.getElementById('uploaded-songs-btn').style.borderBottom = \"none\";\n        document.getElementById('my-playlists-btn').style.fontWeight = \"bold\"\n        document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\"\n        document.getElementById('uploaded-songs-btn').style.fontWeight = \"normal\"\n    }\n\n    // Button click on \"Saved Playlists\"\n    handleSavedPlaylistView = () =>{\n        this.setState({\n            showSavedPlaylists: true,\n            showMyPlaylists: false,\n            showUploadedSongs: false\n        })\n        document.getElementById('my-playlists-btn').style.borderBottom = \"none\";\n        document.getElementById('saved-playlists-btn').style.borderBottom = \"2px solid #faed26\"\n        document.getElementById('uploaded-songs-btn').style.borderBottom = \"none\";\n        document.getElementById('my-playlists-btn').style.fontWeight = \"normal\"\n        document.getElementById('saved-playlists-btn').style.fontWeight = \"bold\"\n        document.getElementById('uploaded-songs-btn').style.fontWeight = \"normal\"\n    }\n\n    handleUploadView = () => {\n        this.setState({\n            showSavedPlaylists: false,\n            showMyPlaylists: false,\n            showUploadedSongs: true\n        })\n        document.getElementById('my-playlists-btn').style.borderBottom = \"none\";\n        document.getElementById('saved-playlists-btn').style.borderBottom= \"none\"\n        document.getElementById('uploaded-songs-btn').style.borderBottom = \"2px solid #faed26\";\n        document.getElementById('my-playlists-btn').style.fontWeight = \"normal\"\n        document.getElementById('saved-playlists-btn').style.fontWeight = \"normal\"\n        document.getElementById('uploaded-songs-btn').style.fontWeight = \"bold\"\n    }\n    \n    isSelf = () => {\n        let viewing = this.getUserName()\n        let user = this.users[0]\n\n        if (viewing === user.username)\n            return true\n        return false \n    }\n\n    isFollowing = () =>{\n        let user = this.users[0]\n        let viewing = this.getUserName()\n        for (let i = 0; i < user.following.length; i++){\n            console.log(user.following[i].user_id)\n            console.log(viewing.user_id)\n            if (user.following[i].username === viewing){\n                return true\n            }\n                \n        }\n        return false\n    }\n    render() { \n        return ( \n           \n                <div className=\"container-fluid playlist-container\">\n                    {/* Home Button, Username, Account Icon */}\n                    <HeaderNavbar  props = {this.props}/>\n                    <div className=\"container-fluid playlist-data-container\">\n                        {/* Information Bar about the user */}\n                    <div className=\"information-row\">\n                        <div className=\"col text-center\">\n                            <h2>{this.getUserName()}                            \n                             \n                             {!this.isSelf() ?\n                                !this.isFollowing() ? \n                                <button> <RiUserAddLine size= {24}/> </button> :\n                                <span> <RiUserFollowLine size={24}/></span>\n                            : null}\n\n                            </h2>\n                             <h5> User Since: {this.getAccountCreationDate()}</h5>\n                        </div>\n                    </div>\n                    \n                    {/* Navigation bar between \"My Playlist\" and \"Saved Playlists\" */}\n                    <div className=\"navigation-row\">\n                        <div className=\"col\">\n                           <button id = \"my-playlists-btn\" className = \"my-playlists-btn\" onClick = {this.handleMyPlaylistView} style = {{borderBottom : \"2px solid #faed26\", fontWeight : \"bold\"}}>  My Playlists </button>\n                        </div>\n\n                        <div className=\"col\">\n                            <button id = \"saved-playlists-btn\" className = \"saved-playlists-btn\" onClick = {this.handleSavedPlaylistView}> Saved Playlists </button>\n                        </div>\n                        \n                        <div className=\"col\">\n                        <button id = \"uploaded-songs-btn\" className = \"uploaded-songs-btn\" onClick = {this.handleUploadView}> Uploaded Songs </button>\n                        </div>\n                    </div>\n\n                    {/* Renders \"My Playlist\" and \"Saved Playlists\" */}\n                    {this.state.showSavedPlaylists ? this.renderPlaylists() : null}\n                    {this.state.showMyPlaylists ? this.renderPlaylists() : null}\n                    {this.state.showUploadedSongs ? this.renderUploads() : null}\n                </div>\n                <PlaylistNavbar/>\n            </div>\n                    \n                \n      \n         );\n    }\n\n    renderPlaylists = () => {\n        let playlists = this.state.showMyPlaylists ? this.getPlaylistsByUsername(this.getUserName()) : this.getSavedPlaylists(this.getUserName());\n        const showMine = this.state.showMyPlaylists\n\n        function PlaylistButton({playlist,history}) {\n            function toPlaylist(){\n                history.history.push('/' + playlist.username.replace(/\\s/g, '%20') + '/playlist='+ playlist.name.replace(/\\s/g, '%20'))\n            }\n\n            return (\n                <div className=\"playlist-row\">\n                    <div className=\"col\">\n                        <RiPlayListLine size = {50}/>\n                    </div>\n\n                    <div className=\"col text-left\">\n                        {playlist.name}\n                        {showMine ? <span>  {playlist.public ? <AiFillEye/> : < AiFillEyeInvisible/>} </span> : null}\n                    </div>\n\n                    <div className=\"col text-left\">\n                        {playlist.songs.length} {playlist.songs.length > 1 ? \"songs\" : \"song\"} \n                    </div>\n\n                    <div className=\"col text-left\">\n                        {showMine ? <><AiFillHeart id={playlist.name} size = {24}/> {playlist.likes} </>:\n                        <>{playlist.username}</>}\n                    </div>\n  \n                    <button className=\"playlist-btn\" id={playlist.playlist_id} onClick = {toPlaylist}/>\n                    \n                    <button className=\"play-btn\">\n                        <FaRegPlayCircle size = {30}/>\n                    </button>\n\n                    <button className=\"delete-btn\">\n                        <AiOutlineDelete size = {24}/>\n                    </button>\n                </div>\n            )\n        }\n        playlists = playlists.map(function(playlist) {\n            return (\n                <PlaylistButton playlist = {playlist} history = {this.props} key = {playlist.playlist_id} />\n            )\n        }, this)\n\n        function NewButton({text}) {\n            const [visible, setVisibility] = React.useState(false)\n\n            function toggleVisibilityTrue() {\n                setVisibility(visible => true)\n            }\n\n            function toggleVisibilityFalse() {\n                setVisibility(visible => false)\n            }\n\n            return (\n                <>\n                    <button className = \"add-btn\" onClick = {toggleVisibilityTrue}> <IoMdAddCircleOutline size = {24}/> </button>\n                    {visible ? \n                    <div className=\"new-playlist-box\">\n                       {text}\n                        <input type=\"text\" required/>\n                        <button className = \"confirm-new-btn\" onClick={toggleVisibilityFalse}> <AiOutlineCheckCircle size = {24}/></button>\n                        <button className = \"cancel-new-btn\"  onClick={toggleVisibilityFalse}> <AiOutlineCloseCircle size = {24}/></button>\n                    </div>\n                    : null}\n                </>\n            )\n        }\n        return (\n            <>\n            {playlists}\n            <div className=\"add-new\">\n\n                <NewButton text = {\"Playlist Name\"}/>\n            </div>\n            </>\n        );\n    }\n\n    renderUploads = () => {\n        function NewButton({text}) {\n            const [visible, setVisibility] = React.useState(false)\n\n            function toggleVisibilityTrue() {\n                setVisibility(visible => true)\n            }\n\n            function toggleVisibilityFalse() {\n                setVisibility(visible => false)\n            }\n\n            return (\n                <>\n                    <button className = \"add-btn\" onClick = {toggleVisibilityTrue}> <IoMdAddCircleOutline size = {24}/> </button>\n                    {visible ? \n                    <div className=\"new-playlist-box\">\n                       {text}\n                        <input type=\"text\" required/>\n                        Name \n                        <input type=\"text\" required/>\n                        <button className = \"confirm-new-upload-btn\" onClick={toggleVisibilityFalse}> <AiOutlineCheckCircle size = {24}/></button>\n                        <button className = \"cancel-new-upload-btn\"  onClick={toggleVisibilityFalse}> <AiOutlineCloseCircle size = {24}/></button>\n                    </div>\n                    : null}\n                </>\n            )\n        }\n        return (\n            <>\n            <div className=\"add-new\">\n\n                <NewButton text = {\"Upload Your Audio File\"}/>\n            </div>\n            </>\n        )\n    }\n}\n \nexport default Playlists;"]},"metadata":{},"sourceType":"module"}